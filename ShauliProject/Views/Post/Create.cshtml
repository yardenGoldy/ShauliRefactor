@model ShauliProject.Models.Post

@Styles.Render("~/Styles/Model.css")

<div id="mainContent">
    <h2>Create</h2>

    @using (Html.BeginForm("Create", "Post", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Post</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                <span class="col-md-8">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </span>
                @Html.LabelFor(model => model.Writer, htmlAttributes: new { @class = "control-label col-md-4" })
                <span class="col-md-8">
                    @Html.EditorFor(model => model.Writer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Writer, "", new { @class = "text-danger" })
                </span>
                @Html.LabelFor(model => model.WriterWebSiteUrl, htmlAttributes: new { @class = "control-label col-md-4" })
                <span class="col-md-8">
                    @Html.EditorFor(model => model.WriterWebSiteUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WriterWebSiteUrl, "", new { @class = "text-danger" })
                </span>
                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-4" })
                <span class="col-md-8">
                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </span>
                <div class="containerOfMedia">
                    <span class="col-md-4">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label" })
                        @Html.CheckBox("isPostImage", false, new { @class = "chk-style", onclick = "javascript:onClickCheckbox('#imageOfPost');" })
                    </span>
                    <span id="imageOfPost" class="col-md-8 @(Convert.ToBoolean(Request["isPostImage"]) ? string.Empty : "hidden")">
                        @Html.TextBoxFor(model => model.Image, new { type = "file", accept = "image/png,image/jpg,image/jpeg" })
                        @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                    </span>
                </div>
                <div class="containerOfMedia">
                    <span class="col-md-4">
                        @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label" })
                        @Html.CheckBox("isPostVideo", false, new { @class = "chk-style", onclick = "javascript:onClickCheckbox('#videoOfPost');" })
                    </span>
                    <span id="videoOfPost" class="col-md-8 @(Convert.ToBoolean(Request["isPostVideo"]) ? string.Empty : "hidden")">
                        @Html.TextBoxFor(model => model.Video, new { type = "file", accept = "video/mp4" })
                        @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
                    </span>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
            
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script src='@Url.Content("~/Scripts/jquery-1.10.2.min.js")'></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.min.js")'></script>
    <script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")'></script>
    <script src='@Url.Content("~/Scripts/utilityScript.js")'></script>

</div>